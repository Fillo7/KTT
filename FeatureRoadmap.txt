1) Tuning manipulator refactor
* Remove TuningManipulator, ManipulatorInterface and implementation
* ComputeEngine public API (thin facade layer)
* TuningManipulator replaced by function (e.g. lambda, ComputeEngine access from argument)
* ComputeEngine refactor

2) Better support for custom buffer handling (evolution of persistent buffers)
* Ability to choose between framework and user buffer handling
* Framework handling is the same as in v1
* With user handling, user is responsible for upload, download, data sync
* New phases - tuning setup and tuning cleanup, ideal for user buffer management

3) Kernel composition refactor
* New class KernelDefinition - only source, name and default sizes
* Kernel is created from one or multiple definitions (simple kernel has only one definitions, composite kernel has multiple definitions)
* New API for independent parameters (AKA tuning packs in v1)

4) Result printing / serialization
* Support for JSON (maybe XML)
* CSV still supported
* More robust serialization - not just save, but also load
* Possibility for tuner state serialization

5) Searchers and configurations
* On-the-fly search - works well for Full/Random search, how to support other techniques and constraints?
* Query for neighbours of given configuration (e.g. configurations which differ in only one parameter value)
* Searcher API from v1 with pre-generated configurations still supported

6) Automatic kernel optimizations
* For cycles
* Automatic floating-point precision adjustment
